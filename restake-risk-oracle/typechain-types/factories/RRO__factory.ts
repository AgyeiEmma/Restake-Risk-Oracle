/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { RRO, RROInterface } from "../RRO";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "baseRiskScore",
        type: "uint8",
      },
    ],
    name: "AVSRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "fromAVS",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "toAVS",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Rebalanced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "avsName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "newRiskScore",
        type: "uint8",
      },
    ],
    name: "RiskScoreUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "maxRiskScore",
        type: "uint8",
      },
    ],
    name: "UserPrefsUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "avsList",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "avsRegistry",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "baseRiskScore",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositToAVS",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllAVSs",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "getRiskScore",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "getUserBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rebalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "baseRiskScore",
        type: "uint8",
      },
    ],
    name: "registerAVS",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "maxRiskScore",
        type: "uint8",
      },
    ],
    name: "setUserPreferences",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "newRiskScore",
        type: "uint8",
      },
    ],
    name: "updateRiskScore",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "userBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userPreferences",
    outputs: [
      {
        internalType: "uint8",
        name: "maxRiskScore",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "autoRebalance",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611f528061005f6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636793bcbf1161008c578063b1bb31c711610066578063b1bb31c714610215578063bfb451e514610231578063dc8f53b21461024d578063e8827cec1461027d576100cf565b80636793bcbf146101bc5780637d7c2a1c146101ed5780638da5cb5b146101f7576100cf565b8063033d62b1146100d457806312bd4d74146101065780632f3d0fb4146101365780633865c795146101525780633e314401146101825780635b649ac4146101a0575b600080fd5b6100ee60048036038101906100e991906112a5565b6102ad565b6040516100fd939291906113a4565b60405180910390f35b610120600480360381019061011b9190611440565b61038f565b60405161012d91906114b5565b60405180910390f35b610150600480360381019061014b91906114fc565b6103ca565b005b61016c60048036038101906101679190611584565b610619565b60405161017991906115b1565b60405180910390f35b61018a6106c5565b60405161019791906116df565b60405180910390f35b6101ba60048036038101906101b59190611701565b61079e565b005b6101d660048036038101906101d1919061175d565b610882565b6040516101e492919061178a565b60405180910390f35b6101f56108c0565b005b6101ff610d40565b60405161020c91906117c2565b60405180910390f35b61022f600480360381019061022a91906114fc565b610d64565b005b61024b600480360381019061024691906117dd565b610f1e565b005b610267600480360381019061026291906112a5565b61103f565b604051610274919061180a565b60405180910390f35b61029760048036038101906102929190611440565b6110e5565b6040516102a491906114b5565b60405180910390f35b6003818051602081018201805184825260208301602085012081835280955050505050506000915090508060000180546102e690611854565b80601f016020809104026020016040519081016040528092919081815260200182805461031290611854565b801561035f5780601f106103345761010080835404028352916020019161035f565b820191906000526020600020905b81548152906001019060200180831161034257829003601f168201915b5050505050908060010160009054906101000a900460ff16908060010160019054906101000a900460ff16905083565b600260205281600052604060002081805160208101820180518482526020830160208501208183528095505050505050600091509150505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610458576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044f906118d1565b60405180910390fd5b600382604051610468919061192d565b908152602001604051809103902060010160019054906101000a900460ff16156104c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104be90611990565b60405180910390fd5b60648160ff16111561050e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610505906119fc565b60405180910390fd5b60405180606001604052808381526020018260ff1681526020016001151581525060038360405161053f919061192d565b908152602001604051809103902060008201518160000190816105629190611bc8565b5060208201518160010160006101000a81548160ff021916908360ff16021790555060408201518160010160016101000a81548160ff0219169083151502179055509050506004829080600181540180825580915050600190039060005260206000200160009091909190915090816105db9190611bc8565b507f49f7841fcfb54c8cd7137babf77e556add6837866c329ce3f241664a847f244f828260405161060d929190611c9a565b60405180910390a15050565b6004818154811061062957600080fd5b90600052602060002001600091509050805461064490611854565b80601f016020809104026020016040519081016040528092919081815260200182805461067090611854565b80156106bd5780601f10610692576101008083540402835291602001916106bd565b820191906000526020600020905b8154815290600101906020018083116106a057829003601f168201915b505050505081565b60606004805480602002602001604051908101604052809291908181526020016000905b8282101561079557838290600052602060002001805461070890611854565b80601f016020809104026020016040519081016040528092919081815260200182805461073490611854565b80156107815780601f1061075657610100808354040283529160200191610781565b820191906000526020600020905b81548152906001019060200180831161076457829003601f168201915b5050505050815260200190600101906106e9565b50505050905090565b6003826040516107ae919061192d565b908152602001604051809103902060010160019054906101000a900460ff1661080c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080390611d16565b60405180910390fd5b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208360405161085a919061192d565b908152602001604051809103902060008282546108779190611d65565b925050819055505050565b60016020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900460ff16905082565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900460ff1660ff1660ff1681526020016000820160019054906101000a900460ff161515151581525050905060005b600480549050811015610d3c5760006004828154811061096c5761096b611d99565b5b90600052602060002001805461098190611854565b80601f01602080910402602001604051908101604052809291908181526020018280546109ad90611854565b80156109fa5780601f106109cf576101008083540402835291602001916109fa565b820191906000526020600020905b8154815290600101906020018083116109dd57829003601f168201915b505050505090506000600382604051610a13919061192d565b908152602001604051809103902060010160009054906101000a900460ff1690506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083604051610a83919061192d565b908152602001604051809103902054118015610aa85750836000015160ff168160ff16115b15610d2d5760005b600480549050811015610d2b57600060048281548110610ad357610ad2611d99565b5b906000526020600020018054610ae890611854565b80601f0160208091040260200160405190810160405280929190818152602001828054610b1490611854565b8015610b615780601f10610b3657610100808354040283529160200191610b61565b820191906000526020600020905b815481529060010190602001808311610b4457829003601f168201915b50505050509050856000015160ff16600382604051610b80919061192d565b908152602001604051809103902060010160009054906101000a900460ff1660ff1611610d1d576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002085604051610bf6919061192d565b90815260200160405180910390205490506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002086604051610c56919061192d565b90815260200160405180910390208190555080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083604051610cb6919061192d565b90815260200160405180910390206000828254610cd39190611d65565b925050819055507ec408ab61b1ae1879efdb4157de3c68e0858ca360cb9b4c0ceb7e77a2e7dfe233868484604051610d0e9493929190611dc8565b60405180910390a15050610d2b565b508080600101915050610ab0565b505b50508080600101915050610949565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610df2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de9906118d1565b60405180910390fd5b600382604051610e02919061192d565b908152602001604051809103902060010160019054906101000a900460ff16610e60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5790611d16565b60405180910390fd5b60648160ff161115610ea7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9e90611e67565b60405180910390fd5b80600383604051610eb8919061192d565b908152602001604051809103902060010160006101000a81548160ff021916908360ff1602179055507f6fa7b4638d13e180643c2cc53cf09c95a9fde87bb1cf49e420bcb5addebbb1568282604051610f12929190611c9a565b60405180910390a15050565b60648160ff161115610f65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5c90611ed3565b60405180910390fd5b60405180604001604052808260ff16815260200160011515815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548160ff0219169083151502179055509050507f24f9124c55fc571e16013f069a621bc32b51108a826e83f7dccf4d380a2359f63382604051611034929190611ef3565b60405180910390a150565b6000600382604051611051919061192d565b908152602001604051809103902060010160019054906101000a900460ff166110af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110a690611d16565b60405180910390fd5b6003826040516110bf919061192d565b908152602001604051809103902060010160009054906101000a900460ff169050919050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082604051611134919061192d565b908152602001604051809103902054905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6111b282611169565b810181811067ffffffffffffffff821117156111d1576111d061117a565b5b80604052505050565b60006111e461114b565b90506111f082826111a9565b919050565b600067ffffffffffffffff8211156112105761120f61117a565b5b61121982611169565b9050602081019050919050565b82818337600083830152505050565b6000611248611243846111f5565b6111da565b90508281526020810184848401111561126457611263611164565b5b61126f848285611226565b509392505050565b600082601f83011261128c5761128b61115f565b5b813561129c848260208601611235565b91505092915050565b6000602082840312156112bb576112ba611155565b5b600082013567ffffffffffffffff8111156112d9576112d861115a565b5b6112e584828501611277565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561132857808201518184015260208101905061130d565b60008484015250505050565b600061133f826112ee565b61134981856112f9565b935061135981856020860161130a565b61136281611169565b840191505092915050565b600060ff82169050919050565b6113838161136d565b82525050565b60008115159050919050565b61139e81611389565b82525050565b600060608201905081810360008301526113be8186611334565b90506113cd602083018561137a565b6113da6040830184611395565b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061140d826113e2565b9050919050565b61141d81611402565b811461142857600080fd5b50565b60008135905061143a81611414565b92915050565b6000806040838503121561145757611456611155565b5b60006114658582860161142b565b925050602083013567ffffffffffffffff8111156114865761148561115a565b5b61149285828601611277565b9150509250929050565b6000819050919050565b6114af8161149c565b82525050565b60006020820190506114ca60008301846114a6565b92915050565b6114d98161136d565b81146114e457600080fd5b50565b6000813590506114f6816114d0565b92915050565b6000806040838503121561151357611512611155565b5b600083013567ffffffffffffffff8111156115315761153061115a565b5b61153d85828601611277565b925050602061154e858286016114e7565b9150509250929050565b6115618161149c565b811461156c57600080fd5b50565b60008135905061157e81611558565b92915050565b60006020828403121561159a57611599611155565b5b60006115a88482850161156f565b91505092915050565b600060208201905081810360008301526115cb8184611334565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b600061161b826112ee565b61162581856115ff565b935061163581856020860161130a565b61163e81611169565b840191505092915050565b60006116558383611610565b905092915050565b6000602082019050919050565b6000611675826115d3565b61167f81856115de565b935083602082028501611691856115ef565b8060005b858110156116cd57848403895281516116ae8582611649565b94506116b98361165d565b925060208a01995050600181019050611695565b50829750879550505050505092915050565b600060208201905081810360008301526116f9818461166a565b905092915050565b6000806040838503121561171857611717611155565b5b600083013567ffffffffffffffff8111156117365761173561115a565b5b61174285828601611277565b92505060206117538582860161156f565b9150509250929050565b60006020828403121561177357611772611155565b5b60006117818482850161142b565b91505092915050565b600060408201905061179f600083018561137a565b6117ac6020830184611395565b9392505050565b6117bc81611402565b82525050565b60006020820190506117d760008301846117b3565b92915050565b6000602082840312156117f3576117f2611155565b5b6000611801848285016114e7565b91505092915050565b600060208201905061181f600083018461137a565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061186c57607f821691505b60208210810361187f5761187e611825565b5b50919050565b7f4e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b60006118bb600e836112f9565b91506118c682611885565b602082019050919050565b600060208201905081810360008301526118ea816118ae565b9050919050565b600081905092915050565b6000611907826112ee565b61191181856118f1565b935061192181856020860161130a565b80840191505092915050565b600061193982846118fc565b915081905092915050565b7f41565320616c7265616479206578697374730000000000000000000000000000600082015250565b600061197a6012836112f9565b915061198582611944565b602082019050919050565b600060208201905081810360008301526119a98161196d565b9050919050565b7f496e76616c6964207269736b2073636f72650000000000000000000000000000600082015250565b60006119e66012836112f9565b91506119f1826119b0565b602082019050919050565b60006020820190508181036000830152611a15816119d9565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611a7e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611a41565b611a888683611a41565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611ac5611ac0611abb8461149c565b611aa0565b61149c565b9050919050565b6000819050919050565b611adf83611aaa565b611af3611aeb82611acc565b848454611a4e565b825550505050565b600090565b611b08611afb565b611b13818484611ad6565b505050565b5b81811015611b3757611b2c600082611b00565b600181019050611b19565b5050565b601f821115611b7c57611b4d81611a1c565b611b5684611a31565b81016020851015611b65578190505b611b79611b7185611a31565b830182611b18565b50505b505050565b600082821c905092915050565b6000611b9f60001984600802611b81565b1980831691505092915050565b6000611bb88383611b8e565b9150826002028217905092915050565b611bd1826112ee565b67ffffffffffffffff811115611bea57611be961117a565b5b611bf48254611854565b611bff828285611b3b565b600060209050601f831160018114611c325760008415611c20578287015190505b611c2a8582611bac565b865550611c92565b601f198416611c4086611a1c565b60005b82811015611c6857848901518255600182019150602085019450602081019050611c43565b86831015611c855784890151611c81601f891682611b8e565b8355505b6001600288020188555050505b505050505050565b60006040820190508181036000830152611cb48185611334565b9050611cc3602083018461137a565b9392505050565b7f415653206e6f7420666f756e6400000000000000000000000000000000000000600082015250565b6000611d00600d836112f9565b9150611d0b82611cca565b602082019050919050565b60006020820190508181036000830152611d2f81611cf3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611d708261149c565b9150611d7b8361149c565b9250828201905080821115611d9357611d92611d36565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000608082019050611ddd60008301876117b3565b8181036020830152611def8186611334565b90508181036040830152611e038185611334565b9050611e1260608301846114a6565b95945050505050565b7f496e76616c69642073636f726500000000000000000000000000000000000000600082015250565b6000611e51600d836112f9565b9150611e5c82611e1b565b602082019050919050565b60006020820190508181036000830152611e8081611e44565b9050919050565b7f496e76616c6964207468726573686f6c64000000000000000000000000000000600082015250565b6000611ebd6011836112f9565b9150611ec882611e87565b602082019050919050565b60006020820190508181036000830152611eec81611eb0565b9050919050565b6000604082019050611f0860008301856117b3565b611f15602083018461137a565b939250505056fea2646970667358221220b94f9a8e672f66eecd4cc4d91c087bda449055213dd0b1b86d89e0e630db117c64736f6c634300081a0033";

type RROConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RROConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RRO__factory extends ContractFactory {
  constructor(...args: RROConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RRO> {
    return super.deploy(overrides || {}) as Promise<RRO>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RRO {
    return super.attach(address) as RRO;
  }
  override connect(signer: Signer): RRO__factory {
    return super.connect(signer) as RRO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RROInterface {
    return new utils.Interface(_abi) as RROInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): RRO {
    return new Contract(address, _abi, signerOrProvider) as RRO;
  }
}
